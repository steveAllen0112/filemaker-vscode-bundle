{
	"Abs": {
		"prefix": "Abs",
		"body": "Abs ( ${1:number} )$0",
		"description": "Abs",
		"scope": "source.filemaker"
	},
	"Acos": {
		"prefix": "Acos",
		"body": "Acos ( ${1:number} )$0",
		"description": "Acos",
		"scope": "source.filemaker"
	},
	"Asin": {
		"prefix": "Asin",
		"body": "Asin ( ${1:number} )$0",
		"description": "Asin",
		"scope": "source.filemaker"
	},
	"Atan": {
		"prefix": "Atan",
		"body": "Atan ( ${1:number} )$0",
		"description": "Atan",
		"scope": "source.filemaker"
	},
	"Average": {
		"prefix": "Average",
		"body": "Average ( ${1:field}${2: ; ${3:field...}} )",
		"description": "Average",
		"scope": "source.filemaker"
	},
	"Base64Decode": {
		"prefix": "Base64Decode",
		"body": "Base64Decode ( ${1:text}${2: ; ${3:fileNameWithExtension}} )",
		"scope": "source.filemaker"
	},
	"Base64Encode": {
		"prefix": "Base64Encode",
		"body": "Base64Encode ( ${1:sourceField} )",
		"scope": "source.filemaker"
	},
	"Case [inline]": {
		"prefix": "Case",
		"body": "Case ( ${1:test1} ; ${2:result1} ; ${3:test2} ; ${4:result2} ; ${5:defaultResult} )$0",
		"description": "Case",
		"scope": "source.filemaker"
	},
	"Case [stacked]": {
		"prefix": "Case",
		"body": "Case (\n\t${1:test1} ;\n\t\t${2:result1} ;\n\t${3:test2} ;\n\t\t${4:result2} ;\n\t${5:defaultResult}\n)$0",
		"description": "Case",
		"scope": "source.filemaker"
	},
	"Ceiling": {
		"prefix": "Ceiling",
		"body": "Ceiling ( ${1:number} )$0",
		"description": "Ceiling",
		"scope": "source.filemaker"
	},
	"Char": {
		"prefix": "Char",
		"body": "Char ( ${1:number} )$0",
		"description": "Char",
		"scope": "source.filemaker"
	},
	"Choose": {
		"prefix": "Choose",
		"body": "Choose ( ${1:test} ; ${2:result0} ; ${3:result1} )",
		"description": "Choose",
		"scope": "source.filemaker"
	},
	"Code": {
		"prefix": "Code",
		"body": "Code ( ${1:text} )$0",
		"description": "Code",
		"scope": "source.filemaker"
	},
	"Combination": {
		"prefix": "Combination",
		"body": "Combination ( ${1:setSize} ; ${2:numberOfChoices} )$0",
		"description": "Combination",
		"scope": "source.filemaker"
	},
	"ComputeModel": {
		"prefix": "ComputeModel",
		"body": "ComputeModel ( ${1:modelName} ; ${2:name1} ; ${3:value1} )",
		"description": "Returns a JSON object containing the result of the Core ML model evaluation.",
		"scope": "source.filemaker"
	},
	"ConvertFromFileMakerPath": {
		"prefix": "ConvertFromFileMakerPath",
		"body": "ConvertFromFileMakerPath ( ${1:filemakerPath} ; ${2:format} )",
		"description": "Converts a path in FileMaker format to a standard format.",
		"scope": "source.filemaker"
	},
	"ConvertToFileMakerPath": {
		"prefix": "ConvertToFileMakerPath",
		"body": "ConvertToFileMakerPath ( ${1:standardPath} ; ${2:format} )",
		"description": "Converts a path in standard format to FileMaker format.",
		"scope": "source.filemaker"
	},
	"Cos": {
		"prefix": "Cos",
		"body": "Cos ( ${1:angleInRadians} )$0",
		"description": "Cos",
		"scope": "source.filemaker"
	},
	"Count": {
		"prefix": "Count",
		"body": "Count ( ${1:field1}${2: ; field2...} )$0",
		"description": "Count",
		"scope": "source.filemaker"
	},
	"DatabaseNames": {
		"prefix": "DatabaseNames",
		"body": "DatabaseNames",
		"description": "DatabaseNames",
		"scope": "source.filemaker"
	},
	"Date": {
		"prefix": "Date",
		"body": "Date ( ${1:month} ; ${2:day} ; ${3:year} )$0",
		"description": "Date",
		"scope": "source.filemaker"
	},
	"Day": {
		"prefix": "Day",
		"body": "Day ( ${1:date} )$0",
		"description": "Day",
		"scope": "source.filemaker"
	},
	"DayName": {
		"prefix": "DayName",
		"body": "DayName ( ${1:date} )$0",
		"description": "DayName",
		"scope": "source.filemaker"
	},
	"DayNameJ": {
		"prefix": "DayNameJ",
		"body": "DayNameJ ( ${1:date} )$0",
		"description": "DayNameJ",
		"scope": "source.filemaker"
	},
	"DayOfWeek": {
		"prefix": "DayOfWeek",
		"body": "DayOfWeek ( ${1:date} )$0",
		"description": "DayOfWeek",
		"scope": "source.filemaker"
	},
	"DayOfYear": {
		"prefix": "DayOfYear",
		"body": "DayOfYear ( ${1:date} )$0",
		"description": "DayOfYear",
		"scope": "source.filemaker"
	},
	"Degrees": {
		"prefix": "Degrees",
		"body": "Degrees ( ${1:angleInRadians} )$0",
		"description": "Degrees",
		"scope": "source.filemaker"
	},
	"Div": {
		"prefix": "Div",
		"body": "Div ( ${1:number} ; ${2:divisor} )$0",
		"description": "Div",
		"scope": "source.filemaker"
	},
	"Evaluate": {
		"prefix": "Evaluate",
		"body": "Evaluate ( ${1:expression}${2: ; ${3:field1} ; ${4:field2} ;} )$0",
		"description": "Evaluate",
		"scope": "source.filemaker"
	},
	"EvaluationError": {
		"prefix": "EvaluationError",
		"body": "EvaluationError ( ${1:expression} )$0",
		"description": "EvaluationError",
		"scope": "source.filemaker"
	},
	"Exact": {
		"prefix": "Exact",
		"body": "Exact ( ${1:originalText} ; ${2:comparisonText} )$0",
		"description": "Exact",
		"scope": "source.filemaker"
	},
	"ExecuteSQL": {
		"prefix": "ExecuteSQL",
		"body": "ExecuteSQL ( ${1:sqlQuery} ; ${2:fieldSeparator} ; ${3:rowSeparator}${4: ; arguments...} )$0",
		"description": "ExecuteSQL",
		"scope": "source.filemaker"
	},
	"Exp": {
		"prefix": "Exp",
		"body": "Exp ( ${1:number} )$0",
		"description": "Exp",
		"scope": "source.filemaker"
	},
	"Extend": {
		"prefix": "Extend",
		"body": "Extend ( ${1:non-repeatingField} )$0",
		"description": "Extend",
		"scope": "source.filemaker"
	},
	"FV": {
		"prefix": "FV",
		"body": "FV ( ${1:payment} ; ${2:interestRate} ; ${3:periods} )$0",
		"description": "Returns the future value (FV) of an initial investment, based on a constant interest rate and payment amount for the number of periods in months.",
		"scope": "source.filemaker"
	},
	"Factorial": {
		"prefix": "Factorial",
		"body": "Factorial ( ${1:number}${2: ; ${3:numberOfFactors}} )$0",
		"description": "Factorial",
		"scope": "source.filemaker"
	},
	"FieldBounds": {
		"prefix": "FieldBounds",
		"body": "FieldBounds ( ${1:Get ( FileName )} ; ${2:layoutName} ; ${3:fieldName} )$0",
		"description": "FieldBounds",
		"scope": "source.filemaker"
	},
	"FieldComment": {
		"prefix": "FieldComment",
		"body": "FieldComment ( ${1:Get ( FileName )} ; ${2:fieldName} )$0",
		"description": "FieldComment",
		"scope": "source.filemaker"
	},
	"FieldIDs": {
		"prefix": "FieldIDs",
		"body": "FieldIDs ( ${1:Get ( FileName )} ; ${2:layoutName} )$0",
		"description": "FieldIDs",
		"scope": "source.filemaker"
	},
	"FieldNames": {
		"prefix": "FieldNames",
		"body": "FieldNames ( ${1:Get ( FileName )} ; ${2:layoutName} )$0",
		"description": "FieldNames",
		"scope": "source.filemaker"
	},
	"FieldRepetitions": {
		"prefix": "FieldRepetitions",
		"body": "FieldRepetitions ( ${1:Get ( FileName )} ; ${2:layoutName} ; ${3:fieldName} )$0",
		"description": "FieldRepetitions",
		"scope": "source.filemaker"
	},
	"FieldStyle": {
		"prefix": "FieldStyle",
		"body": "FieldStyle ( ${1:Get ( FileName )} ; ${2:layoutName} ; ${3:fieldName} )$0",
		"description": "FieldStyle",
		"scope": "source.filemaker"
	},
	"FieldType": {
		"prefix": "FieldType",
		"body": "FieldType ( ${1:Get ( FileName )} ; ${2:fieldName} )$0",
		"description": "FieldType",
		"scope": "source.filemaker"
	},
	"Filter": {
		"prefix": "Filter",
		"body": "Filter ( ${1:textToFilter} ; ${2:filterText} )$0",
		"description": "Filter",
		"scope": "source.filemaker"
	},
	"FilterValues": {
		"prefix": "FilterValues",
		"body": "FilterValues ( ${1:textToFilter} ; ${2:filterValues} )$0",
		"description": "FilterValues",
		"scope": "source.filemaker"
	},
	"Floor": {
		"prefix": "Floor",
		"body": "Floor ( ${1:number} )$0",
		"description": "Floor",
		"scope": "source.filemaker"
	},
	"GetAsBoolean": {
		"prefix": "GetAsBoolean",
		"body": "GetAsBoolean ( ${1:data} )$0",
		"description": "GetAsBoolean",
		"scope": "source.filemaker"
	},
	"GetAsCSS": {
		"prefix": "GetAsCSS",
		"body": "GetAsCSS ( ${1:text} )$0",
		"description": "GetAsCSS",
		"scope": "source.filemaker"
	},
	"GetAsDate": {
		"prefix": "GetAsDate",
		"body": "GetAsDate ( ${1:text} )$0",
		"description": "GetAsDate",
		"scope": "source.filemaker"
	},
	"GetAsNumber": {
		"prefix": "GetAsNumber",
		"body": "GetAsNumber ( ${1:text} )$0",
		"description": "GetAsNumber",
		"scope": "source.filemaker"
	},
	"GetAsSVG": {
		"prefix": "GetAsSVG",
		"body": "GetAsSVG ( ${1:text} )$0",
		"description": "GetAsSVG",
		"scope": "source.filemaker"
	},
	"GetAsText": {
		"prefix": "GetAsText",
		"body": "GetAsText ( ${1:data} )$0",
		"description": "GetAsText",
		"scope": "source.filemaker"
	},
	"GetAsTime": {
		"prefix": "GetAsTime",
		"body": "GetAsTime ( ${1:text} )$0",
		"description": "GetAsTime",
		"scope": "source.filemaker"
	},
	"GetAsTimestamp": {
		"prefix": "GetAsTimestamp",
		"body": "GetAsTimestamp ( ${1:text} )$0",
		"description": "GetAsTimestamp",
		"scope": "source.filemaker"
	},
	"GetAsURLEncoded": {
		"prefix": "GetAsURLEncoded",
		"body": "GetAsURLEncoded ( ${1:text} )$0",
		"description": "GetAsURLEncoded",
		"scope": "source.filemaker"
	},
	"GetContainerAttribute": {
		"prefix": "GetContainerAttribute",
		"body": "GetContainerAttribute ( ${1:sourceField} ; ${2:album|all|artist|audio|bitrate|composer|coverArt|coverArt|dpiHeight|dpiWidth|duration|externalFiles|externalFiles|externalSize|filename|fileSize|genre|height|image|internalSize|latitude|longitude|make|md5|model|orientation|photo|storageType|timestamp|title|track|transparency|transparency|width|year} )",
		"scope": "source.filemaker"
	},
	"GetField": {
		"prefix": "GetField",
		"body": "GetField ( ${1:fieldName} )$0",
		"description": "GetField",
		"scope": "source.filemaker"
	},
	"GetFieldName": {
		"prefix": "GetFieldName",
		"body": "GetFieldName ( ${1:fieldName} )$0",
		"description": "GetFieldName",
		"scope": "source.filemaker"
	},
	"GetHeight": {
		"prefix": "GetHeight",
		"body": "GetHeight ( ${1:field} )$0",
		"description": "GetHeight",
		"scope": "source.filemaker"
	},
	"GetLayoutObjectAttribute": {
		"prefix": "GetLayoutObjectAttribute",
		"body": "GetLayoutObjectAttribute ( ${1:\"${2:objectName}\"} ; \"${3:objectType | hasFocus | containsFocus | isFrontPanel | isActive | isObjectHidden | bounds | left | right | top | bottom | width | height | rotation | startPoint, | endPoint | source | content | enclosingObject | containedObjects}\"${4: ; ${5:repetitionNumber}${6: ; ${7:portalRowNumber}}} )$0",
		"description": "GetLayoutObjectAttribute",
		"scope": "source.filemaker"
	},
	"GetNextSerialValue": {
		"prefix": "GetNextSerialValue",
		"body": "GetNextSerialValue ( ${1:Get ( FileName )}; ${2:fieldName} )$0",
		"description": "GetNextSerialValue",
		"scope": "source.filemaker"
	},
	"GetNthRecord": {
		"prefix": "GetNthRecord",
		"body": "GetNthRecord ( ${1:fieldName} ; ${2:recordNumber} )$0",
		"description": "GetNthRecord",
		"scope": "source.filemaker"
	},
	"GetRepetition": {
		"prefix": "GetRepetition",
		"body": "GetRepetition ( ${1:repeatingField} ; ${2:number} )$0",
		"description": "GetRepetition",
		"scope": "source.filemaker"
	},
	"GetSummary": {
		"prefix": "GetSummary",
		"body": "GetSummary ( ${1:summaryField} ; ${2:breakField} )$0",
		"description": "GetSummary",
		"scope": "source.filemaker"
	},
	"GetThumbnail": {
		"prefix": "GetThumbnail",
		"body": "GetThumbnail ( ${1:field} ; ${2:width} ; ${3:height} )$0",
		"description": "GetThumbnail",
		"scope": "source.filemaker"
	},
	"GetValue": {
		"prefix": "GetValue",
		"body": "GetValue ( ${1:listOfValues} ; ${2:valueNumber} )$0",
		"description": "GetValue",
		"scope": "source.filemaker"
	},
	"GetWidth": {
		"prefix": "GetWidth",
		"body": "GetWidth ( ${1:field} )$0",
		"description": "GetWidth",
		"scope": "source.filemaker"
	},
	"Hiragana": {
		"prefix": "Hiragana",
		"body": "Hiragana ( ${1:text} )$0",
		"description": "Hiragana",
		"scope": "source.filemaker"
	},
	"Hour": {
		"prefix": "Hour",
		"body": "Hour ( ${1:time} )$0",
		"description": "Hour",
		"scope": "source.filemaker"
	},
	"If": {
		"prefix": "If",
		"body": "If ( ${1:test} ;\n\t${2:result1} ;\n\t${3:result2}\n)$0",
		"description": "If",
		"scope": "source.filemaker"
	},
	"Int": {
		"prefix": "Int",
		"body": "Int ( ${1:number} )$0",
		"description": "Int",
		"scope": "source.filemaker"
	},
	"IsEmpty": {
		"prefix": "IsEmpty",
		"body": "IsEmpty ( ${1:field} )$0",
		"description": "IsEmpty",
		"scope": "source.filemaker"
	},
	"IsValid": {
		"prefix": "IsValid",
		"body": "IsValid ( ${1:field} )$0",
		"description": "IsValid",
		"scope": "source.filemaker"
	},
	"IsValidExpression": {
		"prefix": "IsValidExpression",
		"body": "IsValidExpression ( ${1:expression} )$0",
		"description": "IsValidExpression",
		"scope": "source.filemaker"
	},
	"JSONDeleteElement": {
		"prefix": "JSONDeleteElement",
		"body": "JSONDeleteElement ( ${1:json}, ${2:keyIndexOrPath} )$0",
		"description": "JSONFormatElements",
		"scope": "source.filemaker"
	},
	"JSONFormatElements": {
		"prefix": "JSONFormatElements",
		"body": "JSONFormatElements ( ${1:json} )$0",
		"description": "JSONFormatElements",
		"scope": "source.filemaker"
	},
	"JSONGetElement": {
		"prefix": "JSONGetElement",
		"body": "JSONGetElement ( ${1:json} ; ${2:key} )$0",
		"description": "JSONGetElement",
		"scope": "source.filemaker"
	},
	"JSONGetElementType": {
		"prefix": "JSONGetElementType",
		"body": "JSONGetElementType ( ${1:json} ; ${2:\"${3:key}\"} )$0",
		"description": "JSONGetElementType",
		"scope": "source.filemaker"
	},
	"JSONListKeys": {
		"prefix": "JSONListKeys",
		"body": "JSONListKeys ( ${1:json} ; ${2:keyOrIndexOrPath} )$0",
		"description": "JSONListKeys",
		"scope": "source.filemaker"
	},
	"JSONListValues": {
		"prefix": "JSONListValues",
		"body": "JSONListValues ( ${1:json} ; ${2:keyOrIndexOrPath} )$0",
		"description": "JSONListValues",
		"scope": "source.filemaker"
	},
	"JSONSetElement": {
		"prefix": "JSONSetElement",
		"body": "JSONSetElement ( ${1:\"$2\"} ;\n\t[ \"${3:key}\" ; ${4:value} ; ${5:JSONString} ]$6\n)$0",
		"description": "JSONSetElement",
		"scope": "source.filemaker"
	},
	"KanaHankaku": {
		"prefix": "KanaHankaku",
		"body": "KanaHankaku ( ${1:text} )$0",
		"description": "KanaHankaku",
		"scope": "source.filemaker"
	},
	"KanaZenkaku": {
		"prefix": "KanaZenkaku",
		"body": "KanaZenkaku ( ${1:text} )$0",
		"description": "KanaZenkaku",
		"scope": "source.filemaker"
	},
	"KanjiNumeral": {
		"prefix": "KanjiNumeral",
		"body": "KanjiNumeral ( ${1:text} )$0",
		"description": "KanjiNumeral",
		"scope": "source.filemaker"
	},
	"Katakana": {
		"prefix": "Katakana",
		"body": "Katakana ( ${1:text} )$0",
		"description": "Katakana",
		"scope": "source.filemaker"
	},
	"Last": {
		"prefix": "Last",
		"body": "Last ( ${1:field} )$0",
		"description": "Last",
		"scope": "source.filemaker"
	},
	"LayoutIDs": {
		"prefix": "LayoutIDs",
		"body": "LayoutIDs ( ${1:Get ( FileName )} )$0",
		"description": "LayoutIDs",
		"scope": "source.filemaker"
	},
	"LayoutNames": {
		"prefix": "LayoutNames",
		"body": "LayoutNames ( ${1:Get ( FileName )} )$0",
		"description": "LayoutNames",
		"scope": "source.filemaker"
	},
	"LayoutObjectNames": {
		"prefix": "LayoutObjectNames",
		"body": "LayoutObjectNames ( ${1:Get ( FileName )} ; ${2:layoutName} )$0",
		"description": "LayoutObjectNames",
		"scope": "source.filemaker"
	},
	"LayoutObjectUUID": {
		"prefix": "LayoutObjectUUID",
		"body": "LayoutObjectUUID",
		"description": "Returns the Universally Unique Identifier (UUID) of the layout object in which the calculation is defined.",
		"scope": "source.filemaker"
	},
	"Left": {
		"prefix": "Left",
		"body": "Left ( ${1:text} ; ${2:numberOfCharacters} )$0",
		"description": "Left",
		"scope": "source.filemaker"
	},
	"LeftValues": {
		"prefix": "LeftValues",
		"body": "LeftValues ( ${1:text} ; ${2:numberofvalues} )$0",
		"description": "LeftValues",
		"scope": "source.filemaker"
	},
	"LeftWords": {
		"prefix": "LeftWords",
		"body": "LeftWords ( ${1:text} ; ${2:numberOfWords} )$0",
		"description": "LeftWords",
		"scope": "source.filemaker"
	},
	"Length": {
		"prefix": "Length",
		"body": "Length ( ${1:field} )$0",
		"description": "Length",
		"scope": "source.filemaker"
	},
	"Let [stacked]": {
		"prefix": "Let",
		"body": "Let ([\n\t${1:var1} = ${2:expression1} ;\n\t${3:var2} = ${4:expression2}\n];\n\t${5:calculation}\n)$0",
		"description": "Let",
		"scope": "source.filemaker"
	},
	"Let [inline]": {
		"prefix": "Let",
		"body": "Let ([ ${1:var1} = ${2:expression1} ; ${3:var2} = ${4:expression2} ]; ${5:calculation} )$0",
		"description": "Let",
		"scope": "source.filemaker"
	},
	"Lg": {
		"prefix": "Lg",
		"body": "Lg ( ${1:number} )$0",
		"description": "Lg",
		"scope": "source.filemaker"
	},
	"List": {
		"prefix": "List",
		"body": "List (\n\t\t${1:field1} ;\n\t\t${2:field2} ;\n)$0",
		"description": "List",
		"scope": "source.filemaker"
	},
	"Ln": {
		"prefix": "Ln",
		"body": "Ln ( ${1:number} )$0",
		"description": "Ln",
		"scope": "source.filemaker"
	},
	"Location": {
		"prefix": "Location",
		"body": "Location ( ${1:accuracy} ; ${2:timeout} )$0",
		"description": "Location",
		"scope": "source.filemaker"
	},
	"LocationValues": {
		"prefix": "LocationValues",
		"body": "LocationValues ( ${1:accuracy}${2: ; timeout} )$0",
		"description": "LocationValues",
		"scope": "source.filemaker"
	},
	"Log": {
		"prefix": "Log",
		"body": "Log ( ${1:number} )$0",
		"description": "Log",
		"scope": "source.filemaker"
	},
	"Lookup": {
		"prefix": "Lookup",
		"body": "Lookup ( ${1:sourceField}${2: ; ${3:failExpression}} )$0",
		"description": "Lookup",
		"scope": "source.filemaker"
	},
	"LookupNext": {
		"prefix": "LookupNext",
		"body": "LookupNext ( ${1:sourceField} ; ${2:lower | higher} )$0",
		"description": "LookupNext",
		"scope": "source.filemaker"
	},
	"Lower": {
		"prefix": "Lower",
		"body": "Lower ( ${1:text} )$0",
		"description": "Lower",
		"scope": "source.filemaker"
	},
	"Max": {
		"prefix": "Max",
		"body": "Max ( ${1:field1}${2: ; field2...} )$0",
		"description": "Max",
		"scope": "source.filemaker"
	},
	"Middle": {
		"prefix": "Middle",
		"body": "Middle ( ${1:text} ; ${2:start} ; ${3:numberOfCharacters} )$0",
		"description": "Middle",
		"scope": "source.filemaker"
	},
	"MiddleValues": {
		"prefix": "MiddleValues",
		"body": "MiddleValues ( ${1:text} ; ${2:startingValue} ; ${3:numberOfValues} )$0",
		"description": "MiddleValues",
		"scope": "source.filemaker"
	},
	"MiddleWords": {
		"prefix": "MiddleWords",
		"body": "MiddleWords ( ${1:text} ; ${2:startingWord} ; ${3:numberOfWords} )$0",
		"description": "MiddleWords",
		"scope": "source.filemaker"
	},
	"Min": {
		"prefix": "Min",
		"body": "Min ( ${1:field1}${2: ; field2...} )$0",
		"description": "Min",
		"scope": "source.filemaker"
	},
	"Minute": {
		"prefix": "Minute",
		"body": "Minute ( ${1:time} )$0",
		"description": "Minute",
		"scope": "source.filemaker"
	},
	"Mod": {
		"prefix": "Mod",
		"body": "Mod ( ${1:number} ; ${2:divisor} )$0",
		"description": "Mod",
		"scope": "source.filemaker"
	},
	"Month": {
		"prefix": "Month",
		"body": "Month ( ${1:date} )$0",
		"description": "Month",
		"scope": "source.filemaker"
	},
	"MonthName": {
		"prefix": "MonthName",
		"body": "MonthName ( ${1:date} )$0",
		"description": "MonthName",
		"scope": "source.filemaker"
	},
	"MonthNameJ": {
		"prefix": "MonthNameJ",
		"body": "MonthNameJ ( ${1:date} )$0",
		"description": "MonthNameJ",
		"scope": "source.filemaker"
	},
	"NPV": {
		"prefix": "NPV",
		"body": "NPV ( ${1:payment} ; ${2:interestRate} )$0",
		"description": "Returns the net present value (NPV) of a series of unequal payments made at regular intervals, assuming a fixed interest rate per interval.",
		"scope": "source.filemaker"
	},
	"NumToJText": {
		"prefix": "NumToJText",
		"body": "NumToJText ( ${1:number} ; ${2:separator} ; ${3:characterType} )$0",
		"description": "NumToJText",
		"scope": "source.filemaker"
	},
	"PMT": {
		"prefix": "PMT",
		"body": "PMT ( ${1:principal} ; ${2:interestRate} ; ${3:term} )$0",
		"description": "PMT",
		"scope": "source.filemaker"
	},
	"PV": {
		"prefix": "PV",
		"body": "PV ( ${1:payment} ; ${2:interestRate} ; ${3:periods} )$0",
		"description": "PV",
		"scope": "source.filemaker"
	},
	"PatternCount": {
		"prefix": "PatternCount",
		"body": "PatternCount ( ${1:text} ; ${2:searchString} )$0",
		"description": "PatternCount",
		"scope": "source.filemaker"
	},
	"Position": {
		"prefix": "Position",
		"body": "Position ( ${1:text} ; ${2:searchString} ; ${3:start} ; ${4:occurrence} )$0",
		"description": "Position",
		"scope": "source.filemaker"
	},
	"Proper": {
		"prefix": "Proper",
		"body": "Proper ( ${1:text} )$0",
		"description": "Proper",
		"scope": "source.filemaker"
	},
	"Quote": {
		"prefix": "Quote",
		"body": "Quote ( ${1:text} )$0",
		"description": "Quote",
		"scope": "source.filemaker"
	},
	"RGB": {
		"prefix": "RGB",
		"body": "RGB ( ${1:red} ; ${2:green} ; ${3:blue} )$0",
		"description": "RGB",
		"scope": "source.filemaker"
	},
	"Radians": {
		"prefix": "Radians",
		"body": "Radians ( ${1:angleInDegrees} )$0",
		"description": "Radians",
		"scope": "source.filemaker"
	},
	"RelationInfo": {
		"prefix": "RelationInfo",
		"body": "RelationInfo ( ${1:Get ( FileName )} ; ${2:tableName} )$0",
		"description": "RelationInfo",
		"scope": "source.filemaker"
	},
	"Replace": {
		"prefix": "Replace",
		"body": "Replace ( ${1:text} ; ${2:start} ; ${3:numberOfCharacters} ; ${4:replacementText} )$0",
		"description": "Replace",
		"scope": "source.filemaker"
	},
	"Right": {
		"prefix": "Right",
		"body": "Right ( ${1:text} ; ${2:numberOfCharacters} )$0",
		"description": "Right",
		"scope": "source.filemaker"
	},
	"RightValues": {
		"prefix": "RightValues",
		"body": "RightValues ( ${1:text} ; ${2:numberofvalues} )$0",
		"description": "RightValues",
		"scope": "source.filemaker"
	},
	"RightWords": {
		"prefix": "RightWords",
		"body": "RightWords ( ${1:text} ; ${2:numberOfWords} )$0",
		"description": "RightWords",
		"scope": "source.filemaker"
	},
	"RomanHankaku": {
		"prefix": "RomanHankaku",
		"body": "RomanHankaku ( ${1:text} )$0",
		"description": "RomanHankaku",
		"scope": "source.filemaker"
	},
	"RomanZenkaku": {
		"prefix": "RomanZenkaku",
		"body": "RomanZenkaku ( ${1:text} )$0",
		"description": "RomanZenkaku",
		"scope": "source.filemaker"
	},
	"Round": {
		"prefix": "Round",
		"body": "Round ( ${1:number} ; ${2:precision} )$0",
		"description": "Round",
		"scope": "source.filemaker"
	},
	"ScriptIDs": {
		"prefix": "ScriptIDs",
		"body": "ScriptIDs ( ${1:Get ( FileName )} )$0",
		"description": "ScriptIDs",
		"scope": "source.filemaker"
	},
	"ScriptNames": {
		"prefix": "ScriptNames",
		"body": "ScriptNames ( ${1:\"\"} )$0",
		"description": "ScriptNames",
		"scope": "source.filemaker"
	},
	"Seconds": {
		"prefix": "Seconds",
		"body": "Seconds ( ${1:time} )$0",
		"description": "Seconds",
		"scope": "source.filemaker"
	},
	"SerialIncrement": {
		"prefix": "SerialIncrement",
		"body": "SerialIncrement ( ${1:text} ; ${2:incrementBy} )$0",
		"description": "SerialIncrement",
		"scope": "source.filemaker"
	},
	"SetPrecision": {
		"prefix": "SetPrecision",
		"body": "SetPrecision ( ${1:expression} ; ${2:precision} )$0",
		"description": "SetPrecision",
		"scope": "source.filemaker"
	},
	"Sign": {
		"prefix": "Sign",
		"body": "Sign ( ${1:number} )$0",
		"description": "Sign",
		"scope": "source.filemaker"
	},
	"Sin": {
		"prefix": "Sin",
		"body": "Sin ( ${1:angleInRadians} )$0",
		"description": "Sin",
		"scope": "source.filemaker"
	},
	"Sqrt": {
		"prefix": "Sqrt",
		"body": "Sqrt ( ${1:number} )$0",
		"description": "Sqrt",
		"scope": "source.filemaker"
	},
	"StDev": {
		"prefix": "StDev",
		"body": "StDev ( ${1:field1}${2: ; field2...} )$0",
		"description": "StDev",
		"scope": "source.filemaker"
	},
	"StDevP": {
		"prefix": "StDevP",
		"body": "StDevP ( ${1:field1}${2: ; field2...} )$0",
		"description": "StDevP",
		"scope": "source.filemaker"
	},
	"Substitute": {
		"prefix": "Substitute",
		"body": "Substitute (\n\t${1:text} ;\n\t[ ${2:searchString} ; ${3:replaceString} ]\n)$0",
		"description": "Substitute",
		"scope": "source.filemaker"
	},
	"Sum": {
		"prefix": "Sum",
		"body": "Sum ( ${1:field1}${2: ; field2...} )$0",
		"description": "Sum",
		"scope": "source.filemaker"
	},
	"TableIDs": {
		"prefix": "TableIDs",
		"body": "TableIDs ( ${1:Get ( FileName )} )$0",
		"description": "TableIDs",
		"scope": "source.filemaker"
	},
	"TableNames": {
		"prefix": "TableNames",
		"body": "TableNames ( ${1:Get ( FileName )} )$0",
		"description": "TableNames",
		"scope": "source.filemaker"
	},
	"Tan": {
		"prefix": "Tan",
		"body": "Tan ( ${1:angleInRadians} )$0",
		"description": "Tan",
		"scope": "source.filemaker"
	},
	"TextColor": {
		"prefix": "TextColor",
		"body": "TextColor ( ${1:text} ; ${2:RGB ( ${3:red} ; ${4:green} ; ${5:blue} )} )$0",
		"description": "TextColor",
		"scope": "source.filemaker"
	},
	"TextFont": {
		"prefix": "TextFont",
		"body": "TextFont ( ${1:text} ; ${2:\"${3:fontName}\"}${4: ; ${5:Roman | Greek | Cryllic | CentralEurope | ShiftJIS | TraditionalChinese | SimplifiedChinese | OEM | Symbol | Other}} )$0",
		"description": "TextFont",
		"scope": "source.filemaker"
	},
	"TextFontRemove": {
		"prefix": "TextFontRemove",
		"body": "TextFontRemove ( ${1:text}${2: ; \"${3:fontName}\" ; ${4:Roman | Greek | Cryllic | CentralEurope | ShiftJIS | TraditionalChinese | SimplifiedChinese | OEM | Symbol | Other}} )$0",
		"description": "TextFontRemove",
		"scope": "source.filemaker"
	},
	"TextFormatRemove": {
		"prefix": "TextFormatRemove",
		"body": "TextFormatRemove ( ${1:text} )$0",
		"description": "TextFormatRemove",
		"scope": "source.filemaker"
	},
	"TextSize": {
		"prefix": "TextSize",
		"body": "TextSize ( ${1:text} ; ${2:fontSize} )$0",
		"description": "TextSize",
		"scope": "source.filemaker"
	},
	"TextSizeRemove": {
		"prefix": "TextSizeRemove",
		"body": "TextSizeRemove ( ${1:text}${2: ; ${3:fontSize}} )$0",
		"description": "TextSizeRemove",
		"scope": "source.filemaker"
	},
	"TextStyleAdd": {
		"prefix": "TextStyleAdd",
		"body": "TextStyleAdd ( ${1:text} ; ${2:Plain | Bold | Italic | Underline | Condense | Extend | Strikethrough | SmallCaps | Superscript | Subscript | Uppercase | Lowercase | Titlecase | WordUnderline | DoubleUnderline | AllStyles} )$0",
		"description": "TextStyleAdd",
		"scope": "source.filemaker"
	},
	"TextStyleRemove": {
		"prefix": "TextStyleRemove",
		"body": "TextStyleRemove ( ${1:text} ; ${2:Plain | Bold | Italic | Underline | Condense | Extend | Strikethrough | SmallCaps | Superscript | Subscript | Uppercase | Lowercase | Titlecase | WordUnderline | DoubleUnderline | AllStyles} )$0",
		"description": "TextStyleRemove",
		"scope": "source.filemaker"
	},
	"Time": {
		"prefix": "Time",
		"body": "Time ( ${1:hours} ; ${2:minutes} ; ${3:seconds} )$0",
		"description": "Time",
		"scope": "source.filemaker"
	},
	"Timestamp": {
		"prefix": "Timestamp",
		"body": "Timestamp ( ${1:date} ; ${2:time} )$0",
		"description": "Timestamp",
		"scope": "source.filemaker"
	},
	"Trim": {
		"prefix": "Trim",
		"body": "Trim ( ${1:text} )$0",
		"description": "Trim",
		"scope": "source.filemaker"
	},
	"Truncate": {
		"prefix": "Truncate",
		"body": "Truncate ( ${1:number} ; ${2:precision} )$0",
		"description": "Truncate",
		"scope": "source.filemaker"
	},
	"Upper": {
		"prefix": "Upper",
		"body": "Upper ( ${1:text} )$0",
		"description": "Upper",
		"scope": "source.filemaker"
	},
	"ValueCount": {
		"prefix": "ValueCount",
		"body": "ValueCount ( ${1:text} )$0",
		"description": "ValueCount",
		"scope": "source.filemaker"
	},
	"ValueListIDs": {
		"prefix": "ValueListIDs",
		"body": "ValueListIDs ( ${1:Get ( FileName )} )$0",
		"description": "ValueListIDs",
		"scope": "source.filemaker"
	},
	"ValueListItems": {
		"prefix": "ValueListItems",
		"body": "ValueListItems ( ${1:Get ( FileName )} ; ${2:valueList} )$0",
		"description": "ValueListItems",
		"scope": "source.filemaker"
	},
	"ValueListNames": {
		"prefix": "ValueListNames",
		"body": "ValueListNames ( ${1:Get ( FileName )} )$0",
		"description": "ValueListNames",
		"scope": "source.filemaker"
	},
	"Variance": {
		"prefix": "Variance",
		"body": "Variance ( ${1:field1}${2: ; field2...} )$0",
		"description": "Variance",
		"scope": "source.filemaker"
	},
	"VarianceP": {
		"prefix": "VarianceP",
		"body": "VarianceP ( ${1:field1}${2: ; field2...} )$0",
		"description": "VarianceP",
		"scope": "source.filemaker"
	},
	"VerifyContainer": {
		"prefix": "VerifyContainer",
		"body": "VerifyContainer ( ${1:field1} )$0",
		"description": "VerifyContainer",
		"scope": "source.filemaker"
	},
	"WeekOfYear": {
		"prefix": "WeekOfYear",
		"body": "WeekOfYear ( ${1:date} )$0",
		"description": "WeekOfYear",
		"scope": "source.filemaker"
	},
	"WeekOfYearFiscal": {
		"prefix": "WeekOfYearFiscal",
		"body": "WeekOfYearFiscal ( ${1:date} ; ${2:startingDay} )$0",
		"description": "WeekOfYearFiscal",
		"scope": "source.filemaker"
	},
	"WindowNames": {
		"prefix": "WindowNames",
		"body": "WindowNames${1:( ${2:Get ( FileName )} )}",
		"description": "WindowNames",
		"scope": "source.filemaker"
	},
	"WordCount": {
		"prefix": "WordCount",
		"body": "WordCount ( ${1:text} )$0",
		"description": "WordCount",
		"scope": "source.filemaker"
	},
	"Year": {
		"prefix": "Year",
		"body": "Year ( ${1:date} )$0",
		"description": "Year",
		"scope": "source.filemaker"
	},
	"YearName": {
		"prefix": "YearName",
		"body": "YearName ( ${1:date} )$0",
		"description": "YearName",
		"scope": "source.filemaker"
	},
	"Base64EncodeRFC": {
		"prefix": "Base64EncodeRFC",
		"body": "Base64EncodeRFC ( ${1:RFCNumber} ; ${2:data} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptAuthCode": {
		"prefix": "CryptAuthCode",
		"body": "CryptAuthCode ( ${1:data} ; ${2:algorithm} ; ${3:key} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptDecrypt": {
		"prefix": "CryptDecrypt",
		"body": "CryptDecrypt ( ${1:container} ; ${2:key} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptDecryptBase64": {
		"prefix": "CryptDecryptBase64",
		"body": "CryptDecryptBase64 ( ${1:text} ; ${2:key} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptDigest": {
		"prefix": "CryptDigest",
		"body": "CryptDigest ( ${1:data} ; ${2:algorithm} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptEncrypt": {
		"prefix": "CryptEncrypt",
		"body": "CryptEncrypt ( ${1:data} ; ${2:key} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"CryptEncryptBase64": {
		"prefix": "CryptEncryptBase64",
		"body": "CryptEncryptBase64 ( ${1:data} ; ${2:key} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"Furigana": {
		"prefix": "Furigana",
		"body": "Furigana ( ${1:text} ; ${2:option} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"GetAddonInfo": {
		"prefix": "GetAddonInfo",
		"body": "GetAddonInfo ( ${1:addonID} )$0",
		"description": "Returns a JSON object with information about an add-on.",
		"scope": "source.filemaker"
	},
	"GetAVPlayerAttribute": {
		"prefix": "GetAVPlayerAttribute",
		"body": "GetAVPlayerAttribute ( ${1:attributeName} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"GetLayoutObjectOwnerInfo": {
		"prefix": "GetLayoutObjectOwnerInfo",
		"body": "GetLayoutObjectOwnerInfo ( ${1:objectID} )$0",
		"description": "Returns a JSON object with ownership information about a layout object.",
		"scope": "source.filemaker"
	},
	"GetLiveText": {
		"prefix": "GetLiveText",
		"body": "GetLiveText ( ${1:container} ; \"${2:LANGUAGE: en-US | fr-FR | it-IT | de-DE | es-ES | pt-BR | zh-Hans}\" )$0",
		"description": "Returns the text found in the image of the specified container field using the text-recognition algorithm. Language can be one of the following: en-US, fr-FR, it-IT, de-DE, es-ES, pt-BR, zh-Hans",
		"scope": "source.filemaker"
	},
	"GetModelAttributes": {
		"prefix": "GetModelAttributes",
		"body": "GetModelAttributes ( ${1:modelName} )$0",
		"description": "Returns metadata in JSON format about a named model that's currently loaded.",
		"scope": "source.filemaker"
	},
	"GetSensor": {
		"prefix": "GetSensor",
		"body": "GetSensor ( ${1:sensorName} ; ${2:option1} ; ${3:option2} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"HexDecode": {
		"prefix": "HexDecode",
		"body": "HexDecode ( ${1:date} ; ${2:fileNameWithExtension} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"HexEncode": {
		"prefix": "HexEncode",
		"body": "HexEncode ( ${1:option} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"Pi": {
		"prefix": "Pi",
		"body": "Pi",
		"description": "",
		"scope": "source.filemaker"
	},
	"Random": {
		"prefix": "Random",
		"body": "Random",
		"description": "",
		"scope": "source.filemaker"
	},
	"RangeBeacons": {
		"prefix": "RangeBeacons",
		"body": "RangeBeacons ( ${1:UUID} {; ${2:timeout} ; ${2:major} ; ${3:minor} })",
		"description": "",
		"scope": "source.filemaker"
	},
	"ReadQRCode": {
		"prefix": "ReadQRCode",
		"body": "ReadQRCode ( ${1:container} )$0",
		"description": "",
		"scope": "source.filemaker"
	},
	"Self": {
		"prefix": "Self",
		"body": "Self",
		"description": "",
		"scope": "source.filemaker"
	},
	"SortValues": {
		"prefix": "SortValues",
		"body": "SortValues ( ${1:values} ${2:; ${3:DATATYPE: 1 Text | 2 Number | 3 Date | 4 Time | 5 Timestamp | -1 Text (DESC) | -2 Number (DESC) | -3 Date (DESC) | -4 Time (DESC) | -5 Timestamp (DESC)} ${4:; ${5:LOCALE: en-US, fr-FR, it-IT, de-DE, es-ES, pt-BR, zh-Hans}}} )$0",
		"description": "",
		"scope": "source.filemaker"
	},
	"TextColorRemove": {
		"prefix": "TextColorRemove",
		"body": "TextColorRemove ( ${1:text} {; ${2:RGB()} } )",
		"description": "",
		"scope": "source.filemaker"
	},
	"TextDecode": {
		"prefix": "TextDecode",
		"body": "TextDecode ( ${1:container} ; ${2:encoding} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"TextEncode": {
		"prefix": "TextEncode",
		"body": "TextEncode ( ${1:text} ; ${2:encoding} ; ${3:lineEndings} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"TrimAll": {
		"prefix": "TrimAll",
		"body": "TrimAll ( ${1:text} ; ${2:trimSpaces} ; ${3:trimType} )",
		"description": "",
		"scope": "source.filemaker"
	},
	"UniqueValues": {
		"prefix": "UniqueValues",
		"body": "UniqueValues ( ${1:values} ${2:; ${3:DATATYPE: 1 Text | 2 Number | 3 Date | 4 Time | 5 Timestamp} ${4:; ${5:LOCALE: en-US, fr-FR, it-IT, de-DE, es-ES, pt-BR, zh-Hans}}} )$0",
		"description": "",
		"scope": "source.filemaker"
	},
	"ExecuteSQL [inline]": {
		"prefix": "ExecuteSQL",
		"body": "ExecuteSQL ( \"SELECT ${1:fields} FROM ${2:table} WHERE ${3:expression} \" ; \"\" ; \"\" ; \"\" )",
		"description": "",
		"scope": "source.filemaker"
	},
	"ExecuteSQL [stacked]": {
		"prefix": "ExecuteSQL",
		"body": "ExecuteSQL (\"\n\nSELECT\n\t${1:fields}\nFROM\n\t${2:table}\nWHERE\n\t${3:expression}\n\n\" ; \"\" ; \"\" ; \"\" )",
		"description": "",
		"scope": "source.filemaker"
	},
	"Get(AccountExtendedPrivileges)": {
		"prefix": "Get ( AccountExtendedPrivileges )",
		"body": "Get ( AccountExtendedPrivileges )",
		"description": "AccountExtendedPrivileges",
		"scope": "source.filemaker"
	},
	"Get(AccountGroupName)": {
		"prefix": "Get ( AccountGroupName )",
		"body": "Get ( AccountGroupName )",
		"description": "AccountGroupName",
		"scope": "source.filemaker"
	},
	"Get(AccountName)": {
		"prefix": "Get ( AccountName )",
		"body": "Get ( AccountName )",
		"description": "AccountName",
		"scope": "source.filemaker"
	},
	"Get(AccountPrivilegeSetName)": {
		"prefix": "Get ( AccountPrivilegeSetName )",
		"body": "Get ( AccountPrivilegeSetName )",
		"description": "AccountPrivilegeSetName",
		"scope": "source.filemaker"
	},
	"Get(AccountType)": {
		"prefix": "Get ( AccountType )",
		"body": "Get ( AccountType )",
		"description": "AccountType",
		"scope": "source.filemaker"
	},
	"Get(ActiveFieldContents)": {
		"prefix": "Get ( ActiveFieldContents )",
		"body": "Get ( ActiveFieldContents )",
		"description": "ActiveFieldContents",
		"scope": "source.filemaker"
	},
	"Get(ActiveFieldName)": {
		"prefix": "Get ( ActiveFieldName )",
		"body": "Get ( ActiveFieldName )",
		"description": "ActiveFieldName",
		"scope": "source.filemaker"
	},
	"Get(ActiveFieldTableName)": {
		"prefix": "Get ( ActiveFieldTableName )",
		"body": "Get ( ActiveFieldTableName )",
		"description": "ActiveFieldTableName",
		"scope": "source.filemaker"
	},
	"Get(ActiveLayoutObjectName)": {
		"prefix": "Get ( ActiveLayoutObjectName )",
		"body": "Get ( ActiveLayoutObjectName )",
		"description": "ActiveLayoutObjectName",
		"scope": "source.filemaker"
	},
	"Get(ActiveModifierKeys)": {
		"prefix": "Get ( ActiveModifierKeys )",
		"body": "Get ( ActiveModifierKeys )",
		"description": "ActiveModifierKeys",
		"scope": "source.filemaker"
	},
	"Get(ActivePortalRowNumber)": {
		"prefix": "Get ( ActivePortalRowNumber )",
		"body": "Get ( ActivePortalRowNumber )",
		"description": "ActivePortalRowNumber",
		"scope": "source.filemaker"
	},
	"Get(ActiveRecordNumber)": {
		"prefix": "Get ( ActiveRecordNumber )",
		"body": "Get ( ActiveRecordNumber )",
		"description": "ActiveRecordNumber",
		"scope": "source.filemaker"
	},
	"Get(ActiveRepetitionNumber)": {
		"prefix": "Get ( ActiveRepetitionNumber )",
		"body": "Get ( ActiveRepetitionNumber )",
		"description": "ActiveRepetitionNumber",
		"scope": "source.filemaker"
	},
	"Get(ActiveSelectionSize)": {
		"prefix": "Get ( ActiveSelectionSize )",
		"body": "Get ( ActiveSelectionSize )",
		"description": "ActiveSelectionSize",
		"scope": "source.filemaker"
	},
	"Get(ActiveSelectionStart)": {
		"prefix": "Get ( ActiveSelectionStart )",
		"body": "Get ( ActiveSelectionStart )",
		"description": "ActiveSelectionStart",
		"scope": "source.filemaker"
	},
	"Get(AllowAbortState)": {
		"prefix": "Get ( AllowAbortState )",
		"body": "Get ( AllowAbortState )",
		"description": "AllowAbortState",
		"scope": "source.filemaker"
	},
	"Get(AllowFormattingBarState)": {
		"prefix": "Get ( AllowFormattingBarState )",
		"body": "Get ( AllowFormattingBarState )",
		"description": "AllowFormattingBarState",
		"scope": "source.filemaker"
	},
	"Get(ApplicationArchitecture)": {
		"prefix": "Get ( ApplicationArchitecture )",
		"body": "Get ( ApplicationArchitecture )",
		"description": "ApplicationArchitecture",
		"scope": "source.filemaker"
	},
	"Get(ApplicationLanguage)": {
		"prefix": "Get ( ApplicationLanguage )",
		"body": "Get ( ApplicationLanguage )",
		"description": "ApplicationLanguage",
		"scope": "source.filemaker"
	},
	"Get(ApplicationVersion)": {
		"prefix": "Get ( ApplicationVersion )",
		"body": "Get ( ApplicationVersion )",
		"description": "ApplicationVersion",
		"scope": "source.filemaker"
	},
	"Get(CalculationRepetitionNumber)": {
		"prefix": "Get ( CalculationRepetitionNumber )",
		"body": "Get ( CalculationRepetitionNumber )",
		"description": "CalculationRepetitionNumber",
		"scope": "source.filemaker"
	},
	"Get(ConnectionAttributes)": {
		"prefix": "Get ( ConnectionAttributes )",
		"body": "Get ( ConnectionAttributes )",
		"description": "ConnectionAttributes",
		"scope": "source.filemaker"
	},
	"Get(ConnectionState)": {
		"prefix": "Get ( ConnectionState )",
		"body": "Get ( ConnectionState )",
		"description": "ConnectionState",
		"scope": "source.filemaker"
	},
	"Get(CurrentDate)": {
		"prefix": "Get ( CurrentDate )",
		"body": "Get ( CurrentDate )",
		"description": "CurrentDate",
		"scope": "source.filemaker"
	},
	"Get(CurrentExtendedPrivileges)": {
		"prefix": "Get ( CurrentExtendedPrivileges )",
		"body": "Get ( CurrentExtendedPrivileges )",
		"description": "CurrentExtendedPrivileges",
		"scope": "source.filemaker"
	},
	"Get(CurrentHostTimestamp)": {
		"prefix": "Get ( CurrentHostTimestamp )",
		"body": "Get ( CurrentHostTimestamp )",
		"description": "CurrentHostTimestamp",
		"scope": "source.filemaker"
	},
	"Get(CurrentPrivilegeSetName)": {
		"prefix": "Get ( CurrentPrivilegeSetName )",
		"body": "Get ( CurrentPrivilegeSetName )",
		"description": "CurrentPrivilegeSetName",
		"scope": "source.filemaker"
	},
	"Get(CurrentTime)": {
		"prefix": "Get ( CurrentTime )",
		"body": "Get ( CurrentTime )",
		"description": "CurrentTime",
		"scope": "source.filemaker"
	},
	"Get(CurrentTimestamp)": {
		"prefix": "Get ( CurrentTimestamp )",
		"body": "Get ( CurrentTimestamp )",
		"description": "CurrentTimestamp",
		"scope": "source.filemaker"
	},
	"Get(CurrentTimeUTCMilliseconds)": {
		"prefix": "Get ( CurrentTimeUTCMilliseconds )",
		"body": "Get ( CurrentTimeUTCMilliseconds )",
		"description": "CurrentTimeUTCMilliseconds",
		"scope": "source.filemaker"
	},
	"Get(CustomMenuSetName)": {
		"prefix": "Get ( CustomMenuSetName )",
		"body": "Get ( CustomMenuSetName )",
		"description": "CustomMenuSetName",
		"scope": "source.filemaker"
	},
	"Get(DesktopPath)": {
		"prefix": "Get ( DesktopPath )",
		"body": "Get ( DesktopPath )",
		"description": "DesktopPath",
		"scope": "source.filemaker"
	},
	"Get(Device)": {
		"prefix": "Get ( Device )",
		"body": "Get ( Device )",
		"description": "Device",
		"scope": "source.filemaker"
	},
	"Get(DocumentsPath)": {
		"prefix": "Get ( DocumentsPath )",
		"body": "Get ( DocumentsPath )",
		"description": "DocumentsPath",
		"scope": "source.filemaker"
	},
	"Get(DocumentsPathListing)": {
		"prefix": "Get ( DocumentsPathListing )",
		"body": "Get ( DocumentsPathListing )",
		"description": "DocumentsPathListing",
		"scope": "source.filemaker"
	},
	"Get(EncryptionState)": {
		"prefix": "Get ( EncryptionState )",
		"body": "Get ( EncryptionState )",
		"description": "EncryptionState",
		"scope": "source.filemaker"
	},
	"Get(ErrorCaptureState)": {
		"prefix": "Get ( ErrorCaptureState )",
		"body": "Get ( ErrorCaptureState )",
		"description": "ErrorCaptureState",
		"scope": "source.filemaker"
	},
	"Get(FileLocaleElements)": {
		"prefix": "Get ( FileLocaleElements )",
		"body": "Get ( FileLocaleElements )",
		"description": "Returns a JSON object with information about the current file's locale.",
		"scope": "source.filemaker"
	},
	"Get(FileMakerPath)": {
		"prefix": "Get ( FileMakerPath )",
		"body": "Get ( FileMakerPath )",
		"description": "FileMakerPath",
		"scope": "source.filemaker"
	},
	"Get(FileName)": {
		"prefix": "Get ( FileName )",
		"body": "Get ( FileName )",
		"description": "FileName",
		"scope": "source.filemaker"
	},
	"Get(FilePath)": {
		"prefix": "Get ( FilePath )",
		"body": "Get ( FilePath )",
		"description": "FilePath",
		"scope": "source.filemaker"
	},
	"Get(FileSize)": {
		"prefix": "Get ( FileSize )",
		"body": "Get ( FileSize )",
		"description": "FileSize",
		"scope": "source.filemaker"
	},
	"Get(FoundCount)": {
		"prefix": "Get ( FoundCount )",
		"body": "Get ( FoundCount )",
		"description": "FoundCount",
		"scope": "source.filemaker"
	},
	"Get(HighContrastState)": {
		"prefix": "Get ( HighContrastState )",
		"body": "Get ( HighContrastState )",
		"description": "HighContrastState",
		"scope": "source.filemaker"
	},
	"Get(HostApplicationVersion)": {
		"prefix": "Get ( HostApplicationVersion )",
		"body": "Get ( HostApplicationVersion )",
		"description": "HostApplicationVersion",
		"scope": "source.filemaker"
	},
	"Get(HostIPAddress)": {
		"prefix": "Get ( HostIPAddress )",
		"body": "Get ( HostIPAddress )",
		"description": "HostIPAddress",
		"scope": "source.filemaker"
	},
	"Get(HostName)": {
		"prefix": "Get ( HostName )",
		"body": "Get ( HostName )",
		"description": "HostName",
		"scope": "source.filemaker"
	},
	"Get(InstalledFMPlugins)": {
		"prefix": "Get ( InstalledFMPlugins )",
		"body": "Get ( InstalledFMPlugins )",
		"description": "InstalledFMPlugins",
		"scope": "source.filemaker"
	},
	"Get(InstalledFMPluginsAsJSON)": {
		"prefix": "Get ( InstalledFMPluginsAsJSON )",
		"body": "Get ( InstalledFMPluginsAsJSON )",
		"description": "InstalledFMPluginsAsJSON",
		"scope": "source.filemaker"
	},
	"Get(LastError)": {
		"prefix": "Get ( LastError )",
		"body": "Get ( LastError )",
		"description": "LastError",
		"scope": "source.filemaker"
	},
	"Get(LastExternalErrorDetail)": {
		"prefix": "Get ( LastExternalErrorDetail )",
		"body": "Get ( LastExternalErrorDetail )",
		"description": "LastExternalErrorDetail",
		"scope": "source.filemaker"
	},
	"Get(LastMessageChoice)": {
		"prefix": "Get ( LastMessageChoice )",
		"body": "Get ( LastMessageChoice )",
		"description": "LastMessageChoice",
		"scope": "source.filemaker"
	},
	"Get(LayoutAccess)": {
		"prefix": "Get ( LayoutAccess )",
		"body": "Get ( LayoutAccess )",
		"description": "LayoutAccess",
		"scope": "source.filemaker"
	},
	"Get(LayoutCount)": {
		"prefix": "Get ( LayoutCount )",
		"body": "Get ( LayoutCount )",
		"description": "LayoutCount",
		"scope": "source.filemaker"
	},
	"Get(LayoutName)": {
		"prefix": "Get ( LayoutName )",
		"body": "Get ( LayoutName )",
		"description": "LayoutName",
		"scope": "source.filemaker"
	},
	"Get(LayoutNumber)": {
		"prefix": "Get ( LayoutNumber )",
		"body": "Get ( LayoutNumber )",
		"description": "LayoutNumber",
		"scope": "source.filemaker"
	},
	"Get(LayoutTableName)": {
		"prefix": "Get ( LayoutTableName )",
		"body": "Get ( LayoutTableName )",
		"description": "LayoutTableName",
		"scope": "source.filemaker"
	},
	"Get(LayoutViewState)": {
		"prefix": "Get ( LayoutViewState )",
		"body": "Get ( LayoutViewState )",
		"description": "LayoutViewState",
		"scope": "source.filemaker"
	},
	"Get(MenubarState)": {
		"prefix": "Get ( MenubarState )",
		"body": "Get ( MenubarState )",
		"description": "MenubarState",
		"scope": "source.filemaker"
	},
	"Get(ModifiedFields)": {
		"prefix": "Get ( ModifiedFields )",
		"body": "Get ( ModifiedFields )",
		"description": "ModifiedFields",
		"scope": "source.filemaker"
	},
	"Get(MultiUserState)": {
		"prefix": "Get ( MultiUserState )",
		"body": "Get ( MultiUserState )",
		"description": "MultiUserState",
		"scope": "source.filemaker"
	},
	"Get(NetworkProtocol)": {
		"prefix": "Get ( NetworkProtocol )",
		"body": "Get ( NetworkProtocol )",
		"description": "NetworkProtocol",
		"scope": "source.filemaker"
	},
	"Get(NetworkType)": {
		"prefix": "Get ( NetworkType )",
		"body": "Get ( NetworkType )",
		"description": "NetworkType",
		"scope": "source.filemaker"
	},
	"Get(OpenDataFileInfo)": {
		"prefix": "Get ( OpenDataFileInfo )",
		"body": "Get ( OpenDataFileInfo )",
		"description": "OpenDataFileInfo",
		"scope": "source.filemaker"
	},
	"Get(PageCount)": {
		"prefix": "Get ( PageCount )",
		"body": "Get ( PageCount )",
		"description": "PageCount",
		"scope": "source.filemaker"
	},
	"Get(PageNumber)": {
		"prefix": "Get ( PageNumber )",
		"body": "Get ( PageNumber )",
		"description": "PageNumber",
		"scope": "source.filemaker"
	},
	"Get(PersistentID)": {
		"prefix": "Get ( PersistentID )",
		"body": "Get ( PersistentID )",
		"description": "PersistentID",
		"scope": "source.filemaker"
	},
	"Get(PreferencesPath)": {
		"prefix": "Get ( PreferencesPath )",
		"body": "Get ( PreferencesPath )",
		"description": "PreferencesPath",
		"scope": "source.filemaker"
	},
	"Get(PrinterName)": {
		"prefix": "Get ( PrinterName )",
		"body": "Get ( PrinterName )",
		"description": "PrinterName",
		"scope": "source.filemaker"
	},
	"Get(QuickFindText)": {
		"prefix": "Get ( QuickFindText )",
		"body": "Get ( QuickFindText )",
		"description": "QuickFindText",
		"scope": "source.filemaker"
	},
	"Get(RecordAccess)": {
		"prefix": "Get ( RecordAccess )",
		"body": "Get ( RecordAccess )",
		"description": "RecordAccess",
		"scope": "source.filemaker"
	},
	"Get(RecordID)": {
		"prefix": "Get ( RecordID )",
		"body": "Get ( RecordID )",
		"description": "RecordID",
		"scope": "source.filemaker"
	},
	"Get(RecordModificationCount)": {
		"prefix": "Get ( RecordModificationCount )",
		"body": "Get ( RecordModificationCount )",
		"description": "RecordModificationCount",
		"scope": "source.filemaker"
	},
	"Get(RecordNumber)": {
		"prefix": "Get ( RecordNumber )",
		"body": "Get ( RecordNumber )",
		"description": "RecordNumber",
		"scope": "source.filemaker"
	},
	"Get(RecordOpenCount)": {
		"prefix": "Get ( RecordOpenCount )",
		"body": "Get ( RecordOpenCount )",
		"description": "RecordOpenCount",
		"scope": "source.filemaker"
	},
	"Get(RecordOpenState)": {
		"prefix": "Get ( RecordOpenState )",
		"body": "Get ( RecordOpenState )",
		"description": "RecordOpenState",
		"scope": "source.filemaker"
	},
	"Get(RegionMonitorEvents)": {
		"prefix": "Get ( RegionMonitorEvents )",
		"body": "Get ( RegionMonitorEvents )",
		"description": "RegionMonitorEvents",
		"scope": "source.filemaker"
	},
	"Get(RequestCount)": {
		"prefix": "Get ( RequestCount )",
		"body": "Get ( RequestCount )",
		"description": "RequestCount",
		"scope": "source.filemaker"
	},
	"Get(RequestOmitState)": {
		"prefix": "Get ( RequestOmitState )",
		"body": "Get ( RequestOmitState )",
		"description": "RequestOmitState",
		"scope": "source.filemaker"
	},
	"Get(ScreenDepth)": {
		"prefix": "Get ( ScreenDepth )",
		"body": "Get ( ScreenDepth )",
		"description": "ScreenDepth",
		"scope": "source.filemaker"
	},
	"Get(ScreenHeight)": {
		"prefix": "Get ( ScreenHeight )",
		"body": "Get ( ScreenHeight )",
		"description": "ScreenHeight",
		"scope": "source.filemaker"
	},
	"Get(ScreenScaleFactor)": {
		"prefix": "Get ( ScreenScaleFactor )",
		"body": "Get ( ScreenScaleFactor )",
		"description": "ScreenScaleFactor",
		"scope": "source.filemaker"
	},
	"Get(ScreenWidth)": {
		"prefix": "Get ( ScreenWidth )",
		"body": "Get ( ScreenWidth )",
		"description": "ScreenWidth",
		"scope": "source.filemaker"
	},
	"Get(ScriptAnimationState)": {
		"prefix": "Get ( ScriptAnimationState )",
		"body": "Get ( ScriptAnimationState )",
		"description": "ScriptAnimationState",
		"scope": "source.filemaker"
	},
	"Get(ScriptName)": {
		"prefix": "Get ( ScriptName )",
		"body": "Get ( ScriptName )",
		"description": "ScriptName",
		"scope": "source.filemaker"
	},
	"Get(ScriptParameter)": {
		"prefix": "Get ( ScriptParameter )",
		"body": "Get ( ScriptParameter )",
		"description": "ScriptParameter",
		"scope": "source.filemaker"
	},
	"Get(ScriptResult)": {
		"prefix": "Get ( ScriptResult )",
		"body": "Get ( ScriptResult )",
		"description": "ScriptResult",
		"scope": "source.filemaker"
	},
	"Get(SessionIdentifier)": {
		"prefix": "Get ( SessionIdentifier )",
		"body": "Get ( SessionIdentifier )",
		"description": "SessionIdentifier",
		"scope": "source.filemaker"
	},
	"Get(SortState)": {
		"prefix": "Get ( SortState )",
		"body": "Get ( SortState )",
		"description": "SortState",
		"scope": "source.filemaker"
	},
	"Get(StatusAreaState)": {
		"prefix": "Get ( StatusAreaState )",
		"body": "Get ( StatusAreaState )",
		"description": "StatusAreaState",
		"scope": "source.filemaker"
	},
	"Get(SystemAppearance)": {
		"prefix": "Get ( SystemAppearance )",
		"body": "Get ( SystemAppearance )",
		"description": "Returns the name of the current operating system appearance",
		"scope": "source.filemaker"
	},
	"Get(SystemDrive)": {
		"prefix": "Get ( SystemDrive )",
		"body": "Get ( SystemDrive )",
		"description": "SystemDrive",
		"scope": "source.filemaker"
	},
	"Get(SystemIPAddress)": {
		"prefix": "Get ( SystemIPAddress )",
		"body": "Get ( SystemIPAddress )",
		"description": "SystemIPAddress",
		"scope": "source.filemaker"
	},
	"Get(SystemLanguage)": {
		"prefix": "Get ( SystemLanguage )",
		"body": "Get ( SystemLanguage )",
		"description": "SystemLanguage",
		"scope": "source.filemaker"
	},
	"Get(SystemLocaleElements)": {
		"prefix": "Get ( SystemLocaleElements )",
		"body": "Get ( SystemLocaleElements )",
		"description": "Returns a JSON object with information about the client system's locale.",
		"scope": "source.filemaker"
	},
	"Get(SystemNICAddress)": {
		"prefix": "Get ( SystemNICAddress )",
		"body": "Get ( SystemNICAddress )",
		"description": "SystemNICAddress",
		"scope": "source.filemaker"
	},
	"Get(SystemPlatform)": {
		"prefix": "Get ( SystemPlatform )",
		"body": "Get ( SystemPlatform )",
		"description": "SystemPlatform",
		"scope": "source.filemaker"
	},
	"Get(SystemVersion)": {
		"prefix": "Get ( SystemVersion )",
		"body": "Get ( SystemVersion )",
		"description": "SystemVersion",
		"scope": "source.filemaker"
	},
	"Get(TemporaryPath)": {
		"prefix": "Get ( TemporaryPath )",
		"body": "Get ( TemporaryPath )",
		"description": "TemporaryPath",
		"scope": "source.filemaker"
	},
	"Get(TextRulerVisible)": {
		"prefix": "Get ( TextRulerVisible )",
		"body": "Get ( TextRulerVisible )",
		"description": "TextRulerVisible",
		"scope": "source.filemaker"
	},
	"Get(TotalRecordCount)": {
		"prefix": "Get ( TotalRecordCount )",
		"body": "Get ( TotalRecordCount )",
		"description": "TotalRecordCount",
		"scope": "source.filemaker"
	},
	"Get(TouchKeyboardState)": {
		"prefix": "Get ( TouchKeyboardState )",
		"body": "Get ( TouchKeyboardState )",
		"description": "TouchKeyboardState",
		"scope": "source.filemaker"
	},
	"Get(TriggerCurrentPanel)": {
		"prefix": "Get ( TriggerCurrentPanel )",
		"body": "Get ( TriggerCurrentPanel )",
		"description": "TriggerCurrentPanel",
		"scope": "source.filemaker"
	},
	"Get(TriggerExternalEvent)": {
		"prefix": "Get ( TriggerExternalEvent )",
		"body": "Get ( TriggerExternalEvent )",
		"description": "TriggerExternalEvent",
		"scope": "source.filemaker"
	},
	"Get(TriggerGestureInfo)": {
		"prefix": "Get ( TriggerGestureInfo )",
		"body": "Get ( TriggerGestureInfo )",
		"description": "TriggerGestureInfo",
		"scope": "source.filemaker"
	},
	"Get(TriggerKeystroke)": {
		"prefix": "Get ( TriggerKeystroke )",
		"body": "Get ( TriggerKeystroke )",
		"description": "TriggerKeystroke",
		"scope": "source.filemaker"
	},
	"Get(TriggerModifierKeys)": {
		"prefix": "Get ( TriggerModifierKeys )",
		"body": "Get ( TriggerModifierKeys )",
		"description": "TriggerModifierKeys",
		"scope": "source.filemaker"
	},
	"Get(TriggerTargetPanel)": {
		"prefix": "Get ( TriggerTargetPanel )",
		"body": "Get ( TriggerTargetPanel )",
		"description": "TriggerTargetPanel",
		"scope": "source.filemaker"
	},
	"Get(UserCount)": {
		"prefix": "Get ( UserCount )",
		"body": "Get ( UserCount )",
		"description": "UserCount",
		"scope": "source.filemaker"
	},
	"Get(UserName)": {
		"prefix": "Get ( UserName )",
		"body": "Get ( UserName )",
		"description": "UserName",
		"scope": "source.filemaker"
	},
	"Get(UseSystemFormatsState)": {
		"prefix": "Get ( UseSystemFormatsState )",
		"body": "Get ( UseSystemFormatsState )",
		"description": "UseSystemFormatsState",
		"scope": "source.filemaker"
	},
	"Get(UUID)": {
		"prefix": "Get ( UUID )",
		"body": "Get ( UUID )",
		"description": "UUID",
		"scope": "source.filemaker"
	},
	"Get(UUIDNumber)": {
		"prefix": "Get ( UUIDNumber )",
		"body": "Get ( UUIDNumber )",
		"description": "UUIDNumber",
		"scope": "source.filemaker"
	},
	"Get(WindowContentHeight)": {
		"prefix": "Get ( WindowContentHeight )",
		"body": "Get ( WindowContentHeight )",
		"description": "WindowContentHeight",
		"scope": "source.filemaker"
	},
	"Get(WindowContentWidth)": {
		"prefix": "Get ( WindowContentWidth )",
		"body": "Get ( WindowContentWidth )",
		"description": "WindowContentWidth",
		"scope": "source.filemaker"
	},
	"Get(WindowDesktopHeight)": {
		"prefix": "Get ( WindowDesktopHeight )",
		"body": "Get ( WindowDesktopHeight )",
		"description": "WindowDesktopHeight",
		"scope": "source.filemaker"
	},
	"Get(WindowDesktopWidth)": {
		"prefix": "Get ( WindowDesktopWidth )",
		"body": "Get ( WindowDesktopWidth )",
		"description": "WindowDesktopWidth",
		"scope": "source.filemaker"
	},
	"Get(WindowHeight)": {
		"prefix": "Get ( WindowHeight )",
		"body": "Get ( WindowHeight )",
		"description": "WindowHeight",
		"scope": "source.filemaker"
	},
	"Get(WindowLeft)": {
		"prefix": "Get ( WindowLeft )",
		"body": "Get ( WindowLeft )",
		"description": "WindowLeft",
		"scope": "source.filemaker"
	},
	"Get(WindowMode)": {
		"prefix": "Get ( WindowMode )",
		"body": "Get ( WindowMode )",
		"description": "WindowMode",
		"scope": "source.filemaker"
	},
	"Get(WindowName)": {
		"prefix": "Get ( WindowName )",
		"body": "Get ( WindowName )",
		"description": "WindowName",
		"scope": "source.filemaker"
	},
	"Get(WindowOrientation)": {
		"prefix": "Get ( WindowOrientation )",
		"body": "Get ( WindowOrientation )",
		"description": "WindowOrientation",
		"scope": "source.filemaker"
	},
	"Get(WindowStyle)": {
		"prefix": "Get ( WindowStyle )",
		"body": "Get ( WindowStyle )",
		"description": "WindowStyle",
		"scope": "source.filemaker"
	},
	"Get(WindowTop)": {
		"prefix": "Get ( WindowTop )",
		"body": "Get ( WindowTop )",
		"description": "WindowTop",
		"scope": "source.filemaker"
	},
	"Get(WindowVisible)": {
		"prefix": "Get ( WindowVisible )",
		"body": "Get ( WindowVisible )",
		"description": "WindowVisible",
		"scope": "source.filemaker"
	},
	"Get(WindowWidth)": {
		"prefix": "Get ( WindowWidth )",
		"body": "Get ( WindowWidth )",
		"description": "WindowWidth",
		"scope": "source.filemaker"
	},
	"Get(WindowZoomLevel)": {
		"prefix": "Get ( WindowZoomLevel )",
		"body": "Get ( WindowZoomLevel )",
		"description": "WindowZoomLevel",
		"scope": "source.filemaker"
	},
	"While": {
		"prefix": "While",
		"body": "While ([\n\t${1:initValue1} = ${2:value1} ;\n\t${3:initValue2} = ${4:value2}\n];\n${5:condition};\n[\n\t${6:logic}\n];\n${7:result}\n)$0",
		"description": "while",
		"scope": "source.filemaker"
	},
	"CryptGenerateSignature": {
		"prefix": "CryptGenerateSignature",
		"body": "CryptGenerateSignature ( ${1:data} ; ${2:algorithm} ; ${3:privateRSAKey} ; ${4:keyPassword} )",
		"description": "CryptGenerateSignature",
		"scope": "source.filemaker"
	},
	"CryptVerifySignature": {
		"prefix": "CryptVerifySignature",
		"body": "CryptVerifySignature ( ${1:data} ; ${2:alogrithm} ; ${3:publicRSAKey} ; ${4:signature} )",
		"description": "CryptVerifySignature",
		"scope": "source.filemaker"
	},
	"SetRecursion": {
		"prefix": "SetRecursion",
		"body": "SetRecursion ( ${1:expression} ; ${2:maxIteration} )",
		"description": "SetRecursion",
		"scope": "source.filemaker"
	}
}